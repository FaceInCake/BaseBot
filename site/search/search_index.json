{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to BaseBot BaseBot is a complete rewrite of BarebonesFRC with 2 goals. Do it right, and do it fast. The entire codebase is written in pure c/c++ and some components are being optimized further using ARMv7-a assembly. Project Layout This project is split up into two basic sections. They are as follows: Commands These include autonomus code Modular layer between the DriverStation and the hardware Allow for drivers to interface with the robot Subsystems These are the layer directly above WPILib. Interface with hardware Get sensor data Move motors Can be called by multiple commands","title":"Welcome to BaseBot"},{"location":"#welcome-to-basebot","text":"BaseBot is a complete rewrite of BarebonesFRC with 2 goals. Do it right, and do it fast. The entire codebase is written in pure c/c++ and some components are being optimized further using ARMv7-a assembly.","title":"Welcome to BaseBot"},{"location":"#project-layout","text":"This project is split up into two basic sections. They are as follows: Commands These include autonomus code Modular layer between the DriverStation and the hardware Allow for drivers to interface with the robot Subsystems These are the layer directly above WPILib. Interface with hardware Get sensor data Move motors Can be called by multiple commands","title":"Project Layout"},{"location":"Robot/Operator-Interface/","text":"","title":"Operator Interface"},{"location":"Robot/Robot/","text":"","title":"Robot"},{"location":"Robot/Commands/DriveWithJoystick/","text":"Overview DriveWithJoystick is a command that takes in controller data from the DriverStation or other dsconn packet sources and calls DriveTrain with the output calculated by this code. Input Movement Driver Jeft-Joy X axis Driver Jeft-Joy Y axis Actions Driver A button Driver Right bumper Slow Mode Slow mode is activated by holding the right bumper on the driver's controller. This will decrease the speed of the robot to 50-80% of it's normal speed. Reverse Heading Pressing the X button will multiply the speed value by -1. This makes the robot drive in the oposite direciton while still having intuitive steering. Speed and Rotation Calculation Overview This is a rough, pseudocode outline of how the speed and rotation are calculated. speed = joyDrive.getY() * -1 rotation = joyDrive.getX() speedMultiplier = joyDrive.getRightBumper() direcitonMultiplier = joyDrive.getAButtonReleased() speed = (speed * speedMultiplier * directionMultiplier) rotation = (rotation * speedMultiplier) After this, the speed and roataion are passed into the ArcadeDrive method of DriveTrain","title":"DriveWithJoystick"},{"location":"Robot/Commands/DriveWithJoystick/#overview","text":"DriveWithJoystick is a command that takes in controller data from the DriverStation or other dsconn packet sources and calls DriveTrain with the output calculated by this code.","title":"Overview"},{"location":"Robot/Commands/DriveWithJoystick/#input","text":"Movement Driver Jeft-Joy X axis Driver Jeft-Joy Y axis Actions Driver A button Driver Right bumper","title":"Input"},{"location":"Robot/Commands/DriveWithJoystick/#slow-mode","text":"Slow mode is activated by holding the right bumper on the driver's controller. This will decrease the speed of the robot to 50-80% of it's normal speed.","title":"Slow Mode"},{"location":"Robot/Commands/DriveWithJoystick/#reverse-heading","text":"Pressing the X button will multiply the speed value by -1. This makes the robot drive in the oposite direciton while still having intuitive steering.","title":"Reverse Heading"},{"location":"Robot/Commands/DriveWithJoystick/#speed-and-rotation-calculation-overview","text":"This is a rough, pseudocode outline of how the speed and rotation are calculated. speed = joyDrive.getY() * -1 rotation = joyDrive.getX() speedMultiplier = joyDrive.getRightBumper() direcitonMultiplier = joyDrive.getAButtonReleased() speed = (speed * speedMultiplier * directionMultiplier) rotation = (rotation * speedMultiplier) After this, the speed and roataion are passed into the ArcadeDrive method of DriveTrain","title":"Speed and Rotation Calculation Overview"},{"location":"Robot/Subsystems/DriveTrain/","text":"Overview The DriveTrain is the subsystem that interfaces with the motor controllers (Talon SRX) to make the robot move. Setup DriveTrain sets up the motor controllers in the following ways: - Assign each controller to a motor - Slave the controllers to eachother on each side of the robot (to act like one controller per side) - Reverse motors that where incorrectly wired - Disable saftey mode ArcadeDrive This function takes in a forward speed and a rotation, then passes them to WPILib's ArcadeDrive function. TankDrive This function takes in a left and right speed, then passes them to WPILib's TankDrive function.","title":"DriveTrain"},{"location":"Robot/Subsystems/DriveTrain/#overview","text":"The DriveTrain is the subsystem that interfaces with the motor controllers (Talon SRX) to make the robot move.","title":"Overview"},{"location":"Robot/Subsystems/DriveTrain/#setup","text":"DriveTrain sets up the motor controllers in the following ways: - Assign each controller to a motor - Slave the controllers to eachother on each side of the robot (to act like one controller per side) - Reverse motors that where incorrectly wired - Disable saftey mode","title":"Setup"},{"location":"Robot/Subsystems/DriveTrain/#arcadedrive","text":"This function takes in a forward speed and a rotation, then passes them to WPILib's ArcadeDrive function.","title":"ArcadeDrive"},{"location":"Robot/Subsystems/DriveTrain/#tankdrive","text":"This function takes in a left and right speed, then passes them to WPILib's TankDrive function.","title":"TankDrive"}]}